import random

# üìö Listas de nomes e fontes para gerar bibliografias realistas
autores = [
    "SILVA, J.", "COSTA, M.", "MELO, R.", "ALMEIDA, A.", "SOUSA, T.", "LIMA, C.",
    "CARVALHO, P.", "PEREIRA, L.", "RODRIGUES, V.", "BARBOSA, E.", "NASCIMENTO, F.", "FONSECA, G."
]

titulos = [
    "A evolu√ß√£o das sociedades", "O impacto da tecnologia", "Modernidade e tradi√ß√£o",
    "Pensadores contempor√¢neos", "Hist√≥ria e cultura", "O futuro das na√ß√µes",
    "Educa√ß√£o e pandemia", "Redes sociais e comportamento", "Filosofia e ci√™ncia",
    "A influ√™ncia da m√≠dia", "Sustentabilidade e meio ambiente", "Ci√™ncia e inova√ß√£o"
]

editoras = [
    "Editora Moderna", "Companhia das Letras", "Record", "Atlas", "Campus",
    "L&PM", "Objetiva", "Rocco", "Senac", "Paz e Terra", "Multifoco", "Cosac & Naify"
]

anos = [str(ano) for ano in range(1980, 2024)]

revistas = [
    "Revista Brasileira de Educa√ß√£o", "Cadernos de Pesquisa", "Estudos Hist√≥ricos",
    "Revista Ci√™ncia e Cultura", "Minas faz Ci√™ncias", "Diversitas",
    "Varia Historia", "Sa√∫de e Sociedade", "Pesquisa & Debate",
    "Revista de Ci√™ncias Sociais", "Jornal da Universidade", "Hist√≥ria e Mem√≥ria"
]

sites = [
    "https://www.bbc.com", "https://brasil.elpais.com", "https://oglobo.globo.com",
    "https://www.cnnbrasil.com.br", "https://agenciabrasil.ebc.com.br",
    "https://revistaencontro.com.br", "https://www.nexojornal.com.br",
    "https://tab.uol.com.br", "https://www.uol.com.br", "https://www.gov.br",
    "https://pt.wikipedia.org", "https://www.noticias.uol.com.br"
]

datas_acesso = [f"{random.randint(1, 30)} {mes} {random.randint(1900, 2023)}"
                for mes in ["jan.", "fev.", "mar.", "abr.", "mai.", "jun.",
                            "jul.", "ago.", "set.", "out.", "nov.", "dez."]]

# üìÇ Gerar bibliografias e textos normais
bibliografias = []
textos_normais = []

for _ in range(2500):  # Gerar 100000 bibliografias
    tipo = random.choice(["livro", "artigo", "site"])

    if tipo == "livro":
        autor = random.choice(autores)
        titulo = random.choice(titulos)
        editora = random.choice(editoras)
        ano = random.choice(anos)
        biblio = f"{autor} {titulo}. {editora}, {ano}."
    
    elif tipo == "artigo":
        autor = random.choice(autores)
        revista = random.choice(revistas)
        ano = random.choice(anos)
        biblio = f"{autor} {revista}, n. {random.randint(1, 99)}, {ano} (adaptado)."
    
    else:  # tipo == "site"
        site = random.choice(sites)
        data = random.choice(datas_acesso)
        biblio = f"Dispon√≠vel em: {site}. Acesso em: {data}."

    bibliografias.append(f'"{biblio}";"bibliografia"')

# Gerar textos normais (n√£o bibliografias)
textos_exemplos = [
    "A economia global tem enfrentado desafios significativos nos √∫ltimos anos.",
    "A hist√≥ria do Brasil √© marcada por diversos per√≠odos de transforma√ß√£o.",
    "As novas tecnologias impactam a forma como interagimos no dia a dia.",
    "A preserva√ß√£o do meio ambiente √© fundamental para as futuras gera√ß√µes.",
    "O avan√ßo da intelig√™ncia artificial levanta quest√µes √©ticas importantes.",
    "Os esportes desempenham um papel essencial na vida de muitas pessoas.",
    "A literatura cl√°ssica ainda influencia escritores contempor√¢neos.",
    "O sistema educacional precisa de reformas para atender √†s novas demandas.",
    "A pandemia trouxe desafios inesperados para a sa√∫de p√∫blica mundial.",
    "A revolu√ß√£o digital mudou a maneira como consumimos informa√ß√£o.",
    "Os h√°bitos de leitura variam de acordo com a cultura de cada pa√≠s.",
    "A filosofia busca respostas para quest√µes fundamentais da exist√™ncia humana.",
    "O desenvolvimento urbano deve levar em conta a sustentabilidade.",
    "A ci√™ncia tem evolu√≠do rapidamente, trazendo novas descobertas.",
    "A globaliza√ß√£o aproximou culturas, mas tamb√©m gerou desafios sociais."
]

for _ in range(2500):  # Gerar 2500 textos normais
    texto_normal = random.choice(textos_exemplos)
    textos_normais.append(f'"{texto_normal}";"nao_bibliografia"')

# üìÇ Salvar no arquivo
dataset_completo = bibliografias + textos_normais
random.shuffle(dataset_completo)  # Embaralhar os dados para balanceamento

dataset_path = "dataset_bibliografia.csv"
with open(dataset_path, "w", encoding="utf-8") as f:
    f.write("\n".join(dataset_completo))